<?xml version="1.0"?>
<project xmlns:wlp="antlib:net.wasdev.wlp.ant" name="net.wasdev.wlp.ant.it">

    <!-- Specify Liberty profile server installation directory -->
    <property name="wlp_install_dir" value="${basedir}/../build.image/wlp"/>

    <property name="build.dir" value="target/output"/>
    <property name="wlp_usr" value="${build.dir}/wlp_usr"/>
    <property name="wlp_output" value="${build.dir}/wlp_output"/>
    <property name="serverConfig" value="${basedir}/src/test/resources/server.xml"/>
    <property name="serverConfigRemote" value="${basedir}/src/test/resources/server-remote.xml"/>
    <property name="bootProp" value="${basedir}/src/test/resources/bootstrap.properties"/>
    <property name="serverName" value="wlp.ant.test"/>

    <path id="wlp-ant-tasks.classpath">
        <fileset dir="${basedir}/../../../target" includes="wlp-anttasks-*.jar" />
    </path>
    <typedef resource="net/wasdev/wlp/ant/antlib.xml" uri="antlib:net.wasdev.wlp.ant" classpathref="wlp-ant-tasks.classpath" />

    <property name="target.dir" value="${basedir}/target" />

    <!-- Defining server configuration -->
    <property name="wlp.install.dir" value="${target.dir}/wlp" />
    <property name="wlp.usr.dir" value="${target.dir}/wlp_usr" />
    <property name="wlp.output.dir" value="${target.dir}/wlp_output" />
    <property name="servername" value="wlp.ant.test" />

    <property name="serverConfig" value="${basedir}/src/test/resources/server.xml" />
    <property name="bootProp" value="${basedir}/src/test/resources/bootstrap.properties" />

    <target name="installServer">
        <wlp:install-liberty licenseCode="${wlp.license}" version="${wlp.version}" basedir="${target.dir}" />
    </target>

    <target name="createServer">
        <delete dir="${wlp.usr.dir}" />
        <delete dir="${wlp.output.dir}" />
        <mkdir dir="${wlp.usr.dir}" />
        <mkdir dir="${wlp.output.dir}" />

        <wlp:server id="testServer" installDir="${wlp.install.dir}" serverName="${servername}" userDir="${wlp.usr.dir}" outputDir="${wlp.output.dir}" operation="status" />

        <wlp:server operation="create" ref="testServer" />

        <wlp:install-feature ref="testServer" name="mongodb-2.0" whenFileExists="ignore" acceptLicense="true" />
        <!-- install the same feature twice - should not cause an error -->
        <wlp:install-feature ref="testServer" name="mongodb-2.0" whenFileExists="ignore" acceptLicense="true" />
        
        <!-- install features in nested elements -->
        <wlp:install-feature ref="testServer" acceptLicense="true">
            <!-- install the same feature again - should not cause an error -->
            <feature>mongodb-2.0</feature>
            <feature>oauth-2.0</feature>
        </wlp:install-feature>

        <copy overwrite="true" file="${serverConfig}" toFile="${wlp.usr.dir}/servers/${servername}/server.xml" />
        <copy file="${bootProp}" toFile="${wlp.usr.dir}/servers/${servername}/bootstrap.properties" />
        
        <!-- install the features from the server.xml file that are not installed (openid-2-0) -->
        <wlp:install-feature ref="testServer" acceptLicense="true" />
    </target>

    <target name="deploy" depends="createServer">

        <wlp:server ref="testServer" operation="start" />

        <wlp:deploy ref="testServer">
            <fileset dir="${basedir}/../setup/test-war/target">
                <include name="*.war" />
            </fileset>
        </wlp:deploy>
        <wlp:deploy ref="testServer" file="${basedir}/../setup/test-eba/target/test-eba.eba" timeout="40000" />
    </target>

    <target name="undeploy">

        <wlp:server id="testServer" installDir="${wlp.install.dir}" serverName="${servername}" userDir="${wlp.usr.dir}" outputDir="${wlp.output.dir}" operation="status" />

        <wlp:undeploy ref="testServer" file="test-war.war" timeout="50000" />
        <wlp:undeploy ref="testServer" file="test-eba.eba" timeout="60000" />

        <wlp:server ref="testServer" operation="stop" />
        <wlp:uninstall-feature ref="testServer" name="mongodb-2.0"/>
        
        <!-- uninstall features using nested elements -->
        <wlp:uninstall-feature ref="testServer">
            <feature>oauth-2.0</feature>
            <feature>openid-2.0</feature>
        </wlp:uninstall-feature>
        
        <wlp:server ref="testServer" operation="package" archive="${target.dir}/wlp.ant.test.zip" />
    	<wlp:server ref="testServer" operation="package" archive="${target.dir}/wlp.ant.test.os.zip" include="minify" os="OS/400,-z/OS"/>
        <wlp:clean ref="testServer" apps="true" dropins="true" />
    </target>

    <target name="deployRemote">
        <delete dir="${wlp_usr}"/>
        <delete dir="${wlp_output}"/>
        <mkdir dir="${wlp_usr}"/>
        <mkdir dir="${wlp_output}"/>
        <copy file="${serverConfigRemote}" toFile="${wlp_usr}/servers/${serverName}/server.xml"/>
        <copy file="${bootProp}" toFile="${wlp_usr}/servers/${serverName}/bootstrap.properties"/>

        <wlp:server id="wlp.ant.test" installDir="${wlp_install_dir}"
                                serverName="${serverName}" userDir="${wlp_usr}" outputDir="${wlp_output}" operation="start"/>
        <wlp:server ref="wlp.ant.test" operation="status"/>

        <wlp:remote-server id="wlp.ant.remote-test" installDir="${wlp_install_dir}"
            hostName="localhost" httpsPort="8444" userName="testUser" password="testUser" trustStoreLocationPath="${wlp_output}/${serverName}/resources/security/key.jks" trustStorePassword="testStore"/>

        <wlp:upload-file ref="wlp.ant.remote-test">
            <classpath>
                <pathelement location="${wlp_install_dir}/clients/restConnector.jar"/>
                </classpath>
            <fileset dir="${basedir}/../setup/test-war/target">
                <include name="*.war"/>
             </fileset>
        </wlp:upload-file>

        <wlp:upload-file ref="wlp.ant.remote-test" file="${basedir}/../setup/test-eba/target/test-eba.eba"/>

        <wlp:server ref="wlp.ant.test" operation="stop"/>
    </target>

    <target name="deployRemote">
        <delete dir="${wlp_usr}"/>
        <delete dir="${wlp_output}"/>
        <mkdir dir="${wlp_usr}"/>
        <mkdir dir="${wlp_output}"/>
        <copy file="${serverConfigRemote}" toFile="${wlp_usr}/servers/${serverName}/server.xml"/>
        <copy file="${bootProp}" toFile="${wlp_usr}/servers/${serverName}/bootstrap.properties"/>

        <wlp:server id="wlp.ant.test" installDir="${wlp_install_dir}"
                                serverName="${serverName}" userDir="${wlp_usr}" outputDir="${wlp_output}" operation="start"/>
        <wlp:server ref="wlp.ant.test" operation="status"/>

        <wlp:remote-server id="wlp.ant.remote-test" installDir="${wlp_install_dir}"
            hostName="localhost" httpsPort="8444" userName="testUser" password="testUser" trustStoreLocationPath="${wlp_output}/${serverName}/resources/security/key.jks" trustStorePassword="testStore"/>

        <wlp:upload-file ref="wlp.ant.remote-test">
            <classpath>
                <pathelement location="${wlp_install_dir}/clients/restConnector.jar"/>
                </classpath>
            <fileset dir="${basedir}/../setup/test-war/target">
                <include name="*.war"/>
             </fileset>
        </wlp:upload-file>

        <wlp:upload-file ref="wlp.ant.remote-test" file="${basedir}/../setup/test-eba/target/test-eba.eba"/>

        <wlp:server ref="wlp.ant.test" operation="stop"/>
    </target>

</project>
